version: '3.8'

services:
  torchserve:
    build:
      context: ../
      dockerfile: docker/Dockerfile.torchserve
    image: betterprompts/torchserve:latest
    container_name: betterprompts-torchserve
    restart: unless-stopped
    ports:
      - "8080:8080"  # Inference API
      - "8081:8081"  # Management API
      - "8082:8082"  # Metrics API
    volumes:
      - model-store:/home/model-server/model-store
      - logs:/home/model-server/logs
      - ../torchserve/config:/home/model-server/config:ro
    environment:
      - JAVA_OPTS=-Xmx4g -Xms2g -XX:+UseG1GC
      - TS_CONFIG_FILE=/home/model-server/config/config.properties
      - MODEL_STORE=/home/model-server/model-store
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - model-serving
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: betterprompts-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - torchserve
    networks:
      - model-serving

  prometheus:
    image: prom/prometheus:latest
    container_name: betterprompts-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - model-serving

  grafana:
    image: grafana/grafana:latest
    container_name: betterprompts-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - model-serving

  redis:
    image: redis:alpine
    container_name: betterprompts-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - model-serving

volumes:
  model-store:
    driver: local
  logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  redis-data:
    driver: local

networks:
  model-serving:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16