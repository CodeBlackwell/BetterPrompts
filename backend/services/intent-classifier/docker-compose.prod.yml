version: '3.8'

services:
  intent-classifier:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: intent-classifier-prod
    environment:
      - PORT=8001
      - LOG_LEVEL=INFO
      - DEBUG=false
      
      # Database
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=betterprompts
      - POSTGRES_USER=betterprompts
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
      # Model Configuration
      - MODEL_VERSION=v1
      - USE_TORCHSERVE=${USE_TORCHSERVE:-false}
      - TORCHSERVE_HOST=${TORCHSERVE_HOST:-torchserve}
      - TORCHSERVE_PORT=${TORCHSERVE_PORT:-8080}
      
      # Feature Flags
      - ENABLE_ADAPTIVE_ROUTING=true
      - AB_TEST_PERCENTAGE=0.1
      - ENABLE_CACHING=true
      
      # Performance Settings
      - MODEL_BATCH_SIZE=32
      - MAX_WORKERS=4
      - REQUEST_TIMEOUT=30
      
    ports:
      - "8001:8001"
    networks:
      - betterprompts-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    volumes:
      - ./logs:/app/logs
      - model-cache:/app/models
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=8001"
      - "prometheus.io/path=/metrics"

  # TorchServe for DistilBERT (optional)
  torchserve:
    image: pytorch/torchserve:latest
    container_name: torchserve-prod
    environment:
      - TS_MODEL_NAME=intent_classifier
      - TS_INFERENCE_ADDRESS=http://0.0.0.0:8080
      - TS_MANAGEMENT_ADDRESS=http://0.0.0.0:8081
      - TS_METRICS_ADDRESS=http://0.0.0.0:8082
    ports:
      - "8080:8080"  # Inference
      - "8081:8081"  # Management
      - "8082:8082"  # Metrics
    networks:
      - betterprompts-network
    volumes:
      - ./ml-pipeline/trained_models:/home/model-server/model-store
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - torchserve

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - betterprompts-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    ports:
      - "3001:3000"
    networks:
      - betterprompts-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Alert Manager (optional)
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager-prod
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    ports:
      - "9093:9093"
    networks:
      - betterprompts-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  betterprompts-network:
    external: true

volumes:
  model-cache:
  prometheus-data:
  grafana-data:
  alertmanager-data: