# Technique Selection Rules Configuration

techniques:
  - id: "chain_of_thought"
    name: "Chain of Thought"
    description: "Step-by-step reasoning that breaks down complex problems"
    priority: 1
    conditions:
      intents:
        - "reasoning"
        - "problem_solving"
        - "data_analysis"
        - "code_generation"
      keywords:
        - "explain"
        - "why"
        - "how"
        - "analyze"
        - "solve"
        - "calculate"
        - "derive"
      multi_step_indicators:
        - "step by step"
        - "first"
        - "then"
        - "finally"
        - "process"
    template: |
      I'll work through this step-by-step.
      
      {original_prompt}
      
      Let me break this down:

  - id: "tree_of_thoughts"
    name: "Tree of Thoughts"
    description: "Explores multiple reasoning paths and evaluates different approaches"
    priority: 2
    conditions:
      intents:
        - "problem_solving"
        - "task_planning"
        - "reasoning"
      keywords:
        - "options"
        - "alternatives"
        - "compare"
        - "evaluate"
        - "best approach"
        - "pros and cons"
    template: |
      I'll explore different approaches to this problem.
      
      {original_prompt}
      
      Let me consider multiple perspectives:

  - id: "few_shot"
    name: "Few-Shot Learning"
    description: "Provides examples to guide the response format and style"
    priority: 3
    conditions:
      intents:
        - "creative_writing"
        - "code_generation"
        - "translation"
      keywords:
        - "example"
        - "format"
        - "style"
        - "pattern"
        - "template"
        - "like"
    template: |
      I'll follow a similar pattern to these examples:
      
      {examples}
      
      Now for your request:
      {original_prompt}

  - id: "zero_shot"
    name: "Zero-Shot Learning"
    description: "Direct task completion without examples"
    priority: 10
    conditions:
      intents:
        - "question_answering"
        - "conversation"
    template: |
      {original_prompt}

  - id: "self_consistency"
    name: "Self-Consistency"
    description: "Multiple attempts at solving with consistency verification"
    priority: 4
    conditions:
      intents:
        - "data_analysis"
        - "code_generation"
        - "reasoning"
      keywords:
        - "verify"
        - "check"
        - "accurate"
        - "correct"
        - "validate"
    template: |
      I'll solve this multiple ways to ensure accuracy.
      
      {original_prompt}
      
      Approach 1:

  - id: "analogical"
    name: "Analogical Reasoning"
    description: "Uses analogies and comparisons to explain concepts"
    priority: 5
    conditions:
      intents:
        - "explanation"
        - "creative_writing"
        - "reasoning"
      keywords:
        - "like"
        - "similar"
        - "compare"
        - "analogy"
        - "example"
        - "metaphor"
    template: |
      I'll explain this using analogies and comparisons.
      
      {original_prompt}
      
      To understand this better:

  - id: "step_by_step"
    name: "Step by Step"
    description: "Breaks down complex tasks into sequential steps"
    priority: 6
    conditions:
      intents:
        - "task_planning"
        - "code_generation"
        - "problem_solving"
      keywords:
        - "steps"
        - "procedure"
        - "process"
        - "workflow"
        - "sequence"
        - "guide"
    template: |
      I'll break this down into clear sequential steps.
      
      {original_prompt}
      
      Step-by-step process:

  - id: "role_play"
    name: "Role Playing"
    description: "Assumes a specific role or expertise for the response"
    priority: 7
    conditions:
      intents:
        - "creative_writing"
        - "conversation"
        - "explanation"
      keywords:
        - "expert"
        - "professional"
        - "specialist"
        - "as a"
        - "role"
        - "perspective"
    template: |
      As a {role}, I'll address this request:
      
      {original_prompt}

  - id: "structured_output"
    name: "Structured Output"
    description: "Provides response in a specific structured format"
    priority: 8
    conditions:
      intents:
        - "code_generation"
        - "data_analysis"
      keywords:
        - "list"
        - "bullet points"
        - "table"
        - "json"
        - "markdown"
        - "format"
    template: |
      I'll provide this in a structured format.
      
      {original_prompt}
      
      Here's the structured response:

  - id: "react"
    name: "ReAct Framework"
    description: "Combines reasoning and acting for problem solving"
    priority: 9
    conditions:
      intents:
        - "problem_solving"
        - "task_planning"
        - "code_generation"
      keywords:
        - "action"
        - "observe"
        - "think"
        - "reason"
        - "execute"
    template: |
      I'll use Thought-Action-Observation cycles.
      
      {original_prompt}
      
      Thought 1:

# Selection rules
selection_rules:
  max_techniques: 3  # Maximum number of techniques to apply
  min_confidence: 0.3  # Minimum confidence to suggest a technique
  
  # Combination rules
  compatible_combinations:
    - ["chain_of_thought", "self_consistency"]
    - ["few_shot", "step_by_step"]
    - ["tree_of_thoughts", "react"]
    - ["role_play", "structured_output"]
  
  incompatible_combinations:
    - ["zero_shot", "few_shot"]
    - ["tree_of_thoughts", "zero_shot"]
  
  # Priority overrides based on intent
  intent_priority_boost:
    reasoning:
      chain_of_thought: 2
      tree_of_thoughts: 1
    code_generation:
      few_shot: 2
      structured_output: 1
    creative_writing:
      step_by_step: 2
      role_play: 1

# Complexity scoring factors
complexity_factors:
  word_count:
    - range: [0, 20]
      score: 0.1
    - range: [21, 50]
      score: 0.3
    - range: [51, 100]
      score: 0.5
    - range: [101, 200]
      score: 0.7
    - range: [201, -1]
      score: 0.9
  
  multi_part_question: 0.3
  technical_terms: 0.2
  requires_calculation: 0.3
  abstract_concepts: 0.2
  multiple_constraints: 0.3