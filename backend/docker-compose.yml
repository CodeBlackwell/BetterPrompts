version: '3.9'

services:
  # Infrastructure Services
  postgres:
    image: pgvector/pgvector:pg16
    container_name: betterprompts-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-betterprompts}
      POSTGRES_USER: ${POSTGRES_USER:-betterprompts}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./infrastructure/database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - betterprompts-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-betterprompts}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: betterprompts-redis
    command: redis-server /etc/redis/redis.conf --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/redis/redis.conf:/etc/redis/redis.conf:ro
    networks:
      - betterprompts-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: betterprompts-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - betterprompts-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application Services
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: betterprompts-api-gateway
    environment:
      - PORT=${API_GATEWAY_PORT:-8000}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - INTENT_CLASSIFIER_URL=http://intent-classifier:8001
      - TECHNIQUE_SELECTOR_URL=http://technique-selector:8002
      - PROMPT_GENERATOR_URL=http://prompt-generator:8003
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "${API_GATEWAY_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - betterprompts-network
    restart: unless-stopped

  intent-classifier:
    build:
      context: ./services/intent-classifier
      dockerfile: Dockerfile
    container_name: betterprompts-intent-classifier
    environment:
      - PORT=${INTENT_CLASSIFIER_PORT:-8001}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - MODEL_PATH=/app/models
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "${INTENT_CLASSIFIER_PORT:-8001}:8001"
    volumes:
      - ./models:/app/models:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - betterprompts-network
    restart: unless-stopped

  technique-selector:
    build:
      context: ./services/technique-selector
      dockerfile: Dockerfile
    container_name: betterprompts-technique-selector
    environment:
      - PORT=${TECHNIQUE_SELECTOR_PORT:-8002}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - "${TECHNIQUE_SELECTOR_PORT:-8002}:8002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - betterprompts-network
    restart: unless-stopped

  prompt-generator:
    build:
      context: ./services/prompt-generator
      dockerfile: Dockerfile
    container_name: betterprompts-prompt-generator
    environment:
      - PORT=${PROMPT_GENERATOR_PORT:-8003}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - "${PROMPT_GENERATOR_PORT:-8003}:8003"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - betterprompts-network
    restart: unless-stopped

  # Development Tools
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: betterprompts-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@betterprompts.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - betterprompts-network
    profiles:
      - dev

  prometheus:
    image: prom/prometheus:latest
    container_name: betterprompts-prometheus
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - betterprompts-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: betterprompts-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - betterprompts-network
    profiles:
      - monitoring

networks:
  betterprompts-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data: