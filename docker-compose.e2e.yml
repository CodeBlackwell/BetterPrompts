# E2E Test Environment Configuration
# This provides a minimal setup for running E2E tests against the live application

services:
  # PostgreSQL Database (Test Instance)
  postgres:
    image: pgvector/pgvector:pg16
    container_name: betterprompts-postgres-e2e
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    environment:
      - POSTGRES_USER=betterprompts
      - POSTGRES_PASSWORD=betterprompts
      - POSTGRES_DB=betterprompts_e2e
      - POSTGRES_INITDB_ARGS=--encoding=UTF8
    volumes:
      - postgres-e2e-data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - betterprompts-e2e
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U betterprompts -d betterprompts_e2e"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: betterprompts-redis-e2e
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    networks:
      - betterprompts-e2e
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: betterprompts-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI for viewing emails
    networks:
      - betterprompts-e2e
    logging:
      driver: 'none'  # Disable excessive logging

  # API Gateway
  api-gateway:
    build:
      context: ./backend/services/api-gateway
      dockerfile: Dockerfile
    container_name: betterprompts-api-gateway-e2e
    ports:
      - "8090:8090"
    environment:
      - PORT=8090
      - DATABASE_URL=postgresql://betterprompts:betterprompts@postgres:5432/betterprompts_e2e?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=e2e-test-secret-key
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost
      - ENV=test
      - TEST_MODE=true
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_FROM=noreply@betterprompts.test
      - SMTP_AUTH_REQUIRED=false
      - EMAIL_VERIFICATION_REQUIRED=true
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - betterprompts-e2e
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Minimal backend services for registration flow
  intent-classifier:
    build:
      context: ./backend/services/intent-classifier
      dockerfile: Dockerfile
    container_name: betterprompts-intent-classifier-e2e
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://betterprompts:betterprompts@postgres:5432/betterprompts_e2e?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - USE_TORCHSERVE=false  # Skip ML model for E2E tests
      - LOG_LEVEL=DEBUG
    networks:
      - betterprompts-e2e
    depends_on:
      - postgres
      - redis

  technique-selector:
    build:
      context: ./backend/services/technique-selector
      dockerfile: ../../../docker/backend/technique-selector/Dockerfile
    container_name: betterprompts-technique-selector-e2e
    ports:
      - "8002:8002"
    environment:
      - GIN_MODE=debug
      - DATABASE_URL=postgresql://betterprompts:betterprompts@postgres:5432/betterprompts_e2e?sslmode=disable
      - REDIS_URL=redis://redis:6379/1
      - JWT_SECRET=e2e-test-secret-key
      - LOG_LEVEL=DEBUG
    networks:
      - betterprompts-e2e
    depends_on:
      - postgres
      - redis

  prompt-generator:
    build:
      context: .
      dockerfile: docker/backend/prompt-generator/Dockerfile
    container_name: betterprompts-prompt-generator-e2e
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://betterprompts:betterprompts@postgres:5432/betterprompts_e2e?sslmode=disable
      - REDIS_URL=redis://redis:6379/2
      - MOCK_LLM_ENABLED=true  # Use mock LLM for E2E tests
      - LOG_LEVEL=DEBUG
    networks:
      - betterprompts-e2e
    depends_on:
      - postgres
      - redis

  # Frontend Next.js application
  frontend:
    image: node:20-alpine
    working_dir: /app
    container_name: betterprompts-frontend-e2e
    entrypoint: ["/app/docker/frontend/entrypoint.sh"]
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
      - NEXT_PUBLIC_API_URL=http://localhost/api/v1
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - DOCKERIZED=true
    volumes:
      - ./frontend:/app
      - ./docker/frontend/entrypoint.sh:/app/docker/frontend/entrypoint.sh:ro
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - betterprompts-e2e
    healthcheck:
      test: ["CMD", "node", "/app/public/healthcheck.js"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: betterprompts-nginx-e2e
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - betterprompts-e2e
    depends_on:
      - frontend
      - api-gateway
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  betterprompts-e2e:
    driver: bridge

volumes:
  postgres-e2e-data: